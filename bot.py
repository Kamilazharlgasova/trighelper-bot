import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties

API_TOKEN = '8113500779:AAGbkj3qj3ePTziZ_hr3evBe4DJc7CO4TLI'  # üîí

bot = Bot(token=API_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()
user_states = {}

# --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ---
language_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π"), KeyboardButton(text="üá∞üáø “ö–∞–∑–∞“õ—à–∞")],
    ],
    resize_keyboard=True
)

mode_menu_ru = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üë®‚Äçüè´ –ü–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏–∏")],
        [KeyboardButton(text="üìö –£—á–µ–±–Ω—ã–π –∫—É—Ä—Å (–ø–æ—à–∞–≥–æ–≤–æ–µ –æ–±—É—á–µ–Ω–∏–µ)")],
        [KeyboardButton(text="üîô –ù–∞–∑–∞–¥")],
    ],
    resize_keyboard=True
)

mode_menu_kz = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üë®‚Äçüè´ –¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—è –±–æ–π—ã–Ω—à–∞ –∫”©–º–µ–∫—à—ñ")],
        [KeyboardButton(text="üìö –û“õ—É –∫—É—Ä—Å—ã (–∫–µ–∑–µ“£–º–µ–Ω –æ“õ—ã—Ç—É)")],
        [KeyboardButton(text="üîô “ö–∞–π—Ç—É")],
    ],
    resize_keyboard=True
)

helper_menu_ru = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìä –¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è —Ç–∞–±–ª–∏—Ü–∞")],
        [KeyboardButton(text="üìê –¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ñ–æ—Ä–º—É–ª—ã")],
        [KeyboardButton(text="üìà –¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏")],
        [KeyboardButton(text="üßÆ –§–æ—Ä–º—É–ª—ã —Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π")],
        [KeyboardButton(text="‚öñÔ∏è –¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–∞")],
        [KeyboardButton(text="üîô –ù–∞–∑–∞–¥")],
    ],
    resize_keyboard=True
)

helper_menu_kz = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìä –¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—è–ª—ã“õ –∫–µ—Å—Ç–µ")],
        [KeyboardButton(text="üìê –¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—è–ª—ã“õ —Ñ–æ—Ä–º—É–ª–∞–ª–∞—Ä")],
        [KeyboardButton(text="üìà –¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—è–ª—ã“õ —Ñ—É–Ω–∫—Ü–∏—è–ª–∞—Ä")],
        [KeyboardButton(text="üßÆ –¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—è–ª—ã“õ —Ç–µ“£–¥–µ—É–ª–µ—Ä–¥—ñ“£ —Ñ–æ—Ä–º—É–ª–∞–ª–∞—Ä—ã")],
        [KeyboardButton(text="‚öñÔ∏è –¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—è–ª—ã“õ —Ç–µ“£—Å—ñ–∑–¥—ñ–∫—Ç–µ—Ä")],
        [KeyboardButton(text="üîô “ö–∞–π—Ç—É")],
    ],
    resize_keyboard=True
)

# --- –ü–æ–¥–º–µ–Ω—é —Ñ–æ—Ä–º—É–ª ---
trig_formulas_menu_ru = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–û—Å–Ω–æ–≤–Ω—ã–µ —Ç–æ–∂–¥–µ—Å—Ç–≤–∞")],
        [KeyboardButton(text="–§–æ—Ä–º—É–ª—ã –ø—Ä–∏–≤–µ–¥–µ–Ω–∏—è")],
        [KeyboardButton(text="–§–æ—Ä–º—É–ª—ã —Å–ª–æ–∂–µ–Ω–∏—è")],
        [KeyboardButton(text="–§–æ—Ä–º—É–ª—ã –ø–µ—Ä–µ—Ö–æ–¥–∞ –æ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∫ —Å—É–º–º–µ")],
        [KeyboardButton(text="–§–æ—Ä–º—É–ª—ã –¥–≤–æ–π–Ω–æ–≥–æ —É–≥–ª–∞")],
        [KeyboardButton(text="–§–æ—Ä–º—É–ª—ã —Ç—Ä–æ–π–Ω–æ–≥–æ —É–≥–ª–∞")],
        [KeyboardButton(text="–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å—É–º–º—ã")],
        [KeyboardButton(text="–§–æ—Ä–º—É–ª—ã –ø–µ—Ä–µ—Ö–æ–¥–∞ –æ—Ç —Å—É–º–º—ã –∫ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—é")],
        [KeyboardButton(text="–§–æ—Ä–º—É–ª—ã –ø–æ–Ω–∏–∂–µ–Ω–∏—è —Å—Ç–µ–ø–µ–Ω–∏")],
        [KeyboardButton(text="–§–æ—Ä–º—É–ª—ã –ø–æ–ª–æ–≤–∏–Ω–Ω–æ–≥–æ —É–≥–ª–∞")],
        [KeyboardButton(text="üîô –ù–∞–∑–∞–¥")],
    ],
    resize_keyboard=True
)

trig_formulas_menu_kz = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ù–µ–≥—ñ–∑–≥—ñ —Ç–µ–ø–µ-—Ç–µ“£–¥—ñ–∫—Ç–µ—Ä")],
        [KeyboardButton(text="“ö–æ—Å—É —Ñ–æ—Ä–º—É–ª–∞–ª–∞—Ä—ã")],
        [KeyboardButton(text="–ö”©–±–µ–π—Ç—ñ–Ω–¥—ñ–Ω—ñ “õ–æ—Å—ã–Ω–¥—ã“ì–∞ —Ç“Ø—Ä–ª–µ–Ω–¥—ñ—Ä—É —Ñ–æ—Ä–º—É–ª–∞–ª–∞—Ä—ã")],
        [KeyboardButton(text="“ö–æ—Å –±“±—Ä—ã—à—Ç—ã“£ —Ñ–æ—Ä–º—É–ª–∞–ª–∞—Ä—ã")],
        [KeyboardButton(text="“Æ—à –µ—Å–µ–ª–µ–Ω–≥–µ–Ω –±“±—Ä—ã—à—Ç—ã“£ —Ñ–æ—Ä–º—É–ª–∞–ª–∞—Ä—ã")],
        [KeyboardButton(text="–ö–µ–π–±—ñ—Ä “õ–æ—Å—ã–Ω–¥—ã–ª–∞—Ä")],
        [KeyboardButton(text="“ö–æ—Å—ã–Ω–¥—ã–Ω—ã –∫”©–±–µ–π—Ç—ñ–Ω–¥—ñ–≥–µ —Ç“Ø—Ä–ª–µ–Ω–¥—ñ—Ä—É —Ñ–æ—Ä–º—É–ª–∞–ª–∞—Ä—ã")],
        [KeyboardButton(text="–î”ô—Ä–µ–∂–µ–Ω—ñ —Ç”©–º–µ–Ω–¥–µ—Ç—É —Ñ–æ—Ä–º—É–ª–∞–ª–∞—Ä—ã")],
        [KeyboardButton(text="–ñ–∞—Ä—Ç—ã –±“±—Ä—ã—à—Ç—ã“£ —Ñ–æ—Ä–º—É–ª–∞–ª–∞—Ä—ã")],
        [KeyboardButton(text="üîô “ö–∞–π—Ç—É")],
    ],
    resize_keyboard=True
)

# --- –ö–∞—Ä—Ç–∏–Ω–∫–∏ —Ñ–æ—Ä–º—É–ª ---
formula_images = {
    "üìä –¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è —Ç–∞–±–ª–∏—Ü–∞": "AgACAgIAAyEFAASegP1XAAMDZ_pCDBiGAAGfjLYJbgSDFz0N9EoGAALY7zEbEtzQS4kmmcDa3O4nAQADAgADeQADNgQ" ,
    "–û—Å–Ω–æ–≤–Ω—ã–µ —Ç–æ–∂–¥–µ—Å—Ç–≤–∞": "AgACAgIAAxkBAAPGZ_pc15laEIA7Tu-HXsHqmMBMY7YAApzuMRsVr9FLyoRE5LAdT7sBAAMCAAN4AAM2BA",
    "–§–æ—Ä–º—É–ª—ã –ø—Ä–∏–≤–µ–¥–µ–Ω–∏—è": "AgACAgIAAxkBAAPWZ_peUsk587A8aOCXRiCzGByQDjQAApvuMRsVr9FLID02cSbULDkBAAMCAAN5AAM2BA",
    "–§–æ—Ä–º—É–ª—ã —Å–ª–æ–∂–µ–Ω–∏—è": "AgACAgIAAxkBAAPeZ_pfsq_0-NpJwEYJvEW4FPVeGbsAAm_uMRsVr9FL5hLinf7FxL8BAAMCAAN4AAM2BA",
    "–§–æ—Ä–º—É–ª—ã –ø–µ—Ä–µ—Ö–æ–¥–∞ –æ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∫ —Å—É–º–º–µ": "AgACAgIAAxkBAAPgZ_pfvtHgMpS8uCjgXFu8JpsKdn4AAnXuMRsVr9FLvcDg9n93XjYBAAMCAAN4AAM2BA",
    "–§–æ—Ä–º—É–ª—ã –¥–≤–æ–π–Ω–æ–≥–æ —É–≥–ª–∞": "AgACAgIAAxkBAAPiZ_pfzXK720kgOPdeaiC2hLeWgoEAAnbuMRsVr9FLYMDq2S5slL4BAAMCAAN4AAM2BA",
    "–§–æ—Ä–º—É–ª—ã —Ç—Ä–æ–π–Ω–æ–≥–æ —É–≥–ª–∞": "AgACAgIAAxkBAAPmZ_pf4xUtHa5768QL0ihym6OtQQQAAnnuMRsVr9FLq-r2dAMNnrcBAAMCAAN4AAM2BA",
    "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å—É–º–º—ã": "AgACAgIAAxkBAAPaZ_pfcJx9PXt1pIW9Or2Lqg5LugoAAl_1MRt2ctFL4QjzIsxn96QBAAMCAAN4AAM2BA",
    "–§–æ—Ä–º—É–ª—ã –ø–µ—Ä–µ—Ö–æ–¥–∞ –æ—Ç —Å—É–º–º—ã –∫ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—é": "AgACAgIAAxkBAAPkZ_pf1tcTJbooue_N052VQEIU-8UAAnfuMRsVr9FLV6caYSFui0wBAAMCAAN5AAM2BA",
    "–§–æ—Ä–º—É–ª—ã –ø–æ–Ω–∏–∂–µ–Ω–∏—è —Å—Ç–µ–ø–µ–Ω–∏": "AgACAgIAAxkBAAPoZ_pf8qBWBqsOVqT8vcBkcWT5QLsAAn_uMRsVr9FL_jkCPvu4MpgBAAMCAAN4AAM2BA",
    "–§–æ—Ä–º—É–ª—ã –ø–æ–ª–æ–≤–∏–Ω–Ω–æ–≥–æ —É–≥–ª–∞": "AAgACAgIAAxkBAAPqZ_pf-x8Vy0F0DGMjWhwvwSjBfo0AAoHuMRsVr9FLJ3Q7x7z67fwBAAMCAAN5AAM2BA",
    "üìä –¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—è–ª—ã“õ –∫–µ—Å—Ç–µ": "AgACAgIAAyEFAASegP1XAAMDZ_pCDBiGAAGfjLYJbgSDFz0N9EoGAALY7zEbEtzQS4kmmcDa3O4nAQADAgADeQADNgQ" ,
    "–ù–µ–≥—ñ–∑–≥—ñ —Ç–µ–ø–µ-—Ç–µ“£–¥—ñ–∫—Ç–µ—Ä": "AgACAgIAAxkBAAPGZ_pc15laEIA7Tu-HXsHqmMBMY7YAApzuMRsVr9FLyoRE5LAdT7sBAAMCAAN4AAM2BA",
    "“ö–æ—Å—É —Ñ–æ—Ä–º—É–ª–∞–ª–∞—Ä—ã": "AgACAgIAAxkBAAPeZ_pfsq_0-NpJwEYJvEW4FPVeGbsAAm_uMRsVr9FL5hLinf7FxL8BAAMCAAN4AAM2BA",
    "–ö”©–±–µ–π—Ç—ñ–Ω–¥—ñ–Ω—ñ “õ–æ—Å—ã–Ω–¥—ã“ì–∞ —Ç“Ø—Ä–ª–µ–Ω–¥—ñ—Ä—É —Ñ–æ—Ä–º—É–ª–∞–ª–∞—Ä—ã": "AgACAgIAAxkBAAPgZ_pfvtHgMpS8uCjgXFu8JpsKdn4AAnXuMRsVr9FLvcDg9n93XjYBAAMCAAN4AAM2BA",
    "“ö–æ—Å –±“±—Ä—ã—à—Ç—ã“£ —Ñ–æ—Ä–º—É–ª–∞–ª–∞—Ä—ã": "AgACAgIAAxkBAAPiZ_pfzXK720kgOPdeaiC2hLeWgoEAAnbuMRsVr9FLYMDq2S5slL4BAAMCAAN4AAM2BA",
    "“Æ—à –µ—Å–µ–ª–µ–Ω–≥–µ–Ω –±“±—Ä—ã—à—Ç—ã“£ —Ñ–æ—Ä–º—É–ª–∞–ª–∞—Ä—ã": "AgACAgIAAxkBAAPmZ_pf4xUtHa5768QL0ihym6OtQQQAAnnuMRsVr9FLq-r2dAMNnrcBAAMCAAN4AAM2BA",
    "–ö–µ–π–±—ñ—Ä “õ–æ—Å—ã–Ω–¥—ã–ª–∞—Ä": "AgACAgIAAxkBAAPaZ_pfcJx9PXt1pIW9Or2Lqg5LugoAAl_1MRt2ctFL4QjzIsxn96QBAAMCAAN4AAM2BA",
    "“ö–æ—Å—ã–Ω–¥—ã–Ω—ã –∫”©–±–µ–π—Ç—ñ–Ω–¥—ñ–≥–µ —Ç“Ø—Ä–ª–µ–Ω–¥—ñ—Ä—É —Ñ–æ—Ä–º—É–ª–∞–ª–∞—Ä—ã": "AgACAgIAAxkBAAPkZ_pf1tcTJbooue_N052VQEIU-8UAAnfuMRsVr9FLV6caYSFui0wBAAMCAAN5AAM2BA",
    "–î”ô—Ä–µ–∂–µ–Ω—ñ —Ç”©–º–µ–Ω–¥–µ—Ç—É —Ñ–æ—Ä–º—É–ª–∞–ª–∞—Ä—ã": "AgACAgIAAxkBAAPoZ_pf8qBWBqsOVqT8vcBkcWT5QLsAAn_uMRsVr9FL_jkCPvu4MpgBAAMCAAN4AAM2BA",
    "–ñ–∞—Ä—Ç—ã –±“±—Ä—ã—à—Ç—ã“£ —Ñ–æ—Ä–º—É–ª–∞–ª–∞—Ä—ã": "AAgACAgIAAxkBAAPqZ_pf-x8Vy0F0DGMjWhwvwSjBfo0AAoHuMRsVr9FLJ3Q7x7z67fwBAAMCAAN5AAM2BA",
}

# --- /start ---
@dp.message(F.text == "/start")
async def start(message: types.Message):
    user_id = message.from_user.id
    user_states[user_id] = {"lang": None, "mode": None, "history": []}
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / –¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑:", reply_markup=language_menu)

# --- –í—ã–±–æ—Ä —è–∑—ã–∫–∞ ---
@dp.message(F.text.in_(["üá∑üá∫ –†—É—Å—Å–∫–∏–π", "üá∞üáø “ö–∞–∑–∞“õ—à–∞"]))
async def select_language(message: types.Message):
    user_id = message.from_user.id
    if user_id not in user_states:
        user_states[user_id] = {"lang": None, "mode": None, "history": []}
    lang = "ru" if message.text == "üá∑üá∫ –†—É—Å—Å–∫–∏–π" else "kz"
    user_states[user_id]["lang"] = lang
    user_states[user_id]["history"].append("lang_selected")

    if lang == "ru":
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:", reply_markup=mode_menu_ru)
    else:
        await message.answer("–ñ“±–º—ã—Å —Ä–µ–∂–∏–º—ñ–Ω —Ç–∞“£–¥–∞“£—ã–∑:", reply_markup=mode_menu_kz)

# --- –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ ---
@dp.message(F.text.in_([
    "üë®‚Äçüè´ –ü–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏–∏", "üë®‚Äçüè´ –¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—è –±–æ–π—ã–Ω—à–∞ –∫”©–º–µ–∫—à—ñ",
    "üìö –£—á–µ–±–Ω—ã–π –∫—É—Ä—Å (–ø–æ—à–∞–≥–æ–≤–æ–µ –æ–±—É—á–µ–Ω–∏–µ)", "üìö –û“õ—É –∫—É—Ä—Å—ã (–∫–µ–∑–µ“£–º–µ–Ω –æ“õ—ã—Ç—É)"
]))
async def select_mode(message: types.Message):
    user_id = message.from_user.id
    if user_id not in user_states:
        user_states[user_id] = {"lang": None, "mode": None, "history": []}
    lang = user_states[user_id]["lang"]
    user_states[user_id]["history"].append("mode_selected")

    if "üë®‚Äçüè´" in message.text:
        user_states[user_id]["mode"] = "helper"
        if lang == "ru":
            await message.answer("–í—ã –≤ —Ä–µ–∂–∏–º–µ –ø–æ–º–æ—â–Ω–∏–∫–∞ üìã", reply_markup=helper_menu_ru)
        else:
            await message.answer("–°—ñ–∑ –∫”©–º–µ–∫—à—ñ —Ä–µ–∂–∏–º—ñ–Ω–¥–µ—Å—ñ–∑ üìã", reply_markup=helper_menu_kz)
    else:
        user_states[user_id]["mode"] = "course"
        await message.answer("–£—á–µ–±–Ω—ã–π –∫—É—Ä—Å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ üìò\n–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω.")

# --- –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ–¥–º–µ–Ω—é —Ñ–æ—Ä–º—É–ª ---
@dp.message(F.text.in_([
    "üìê –¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ñ–æ—Ä–º—É–ª—ã", "üìê –¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—è–ª—ã“õ —Ñ–æ—Ä–º—É–ª–∞–ª–∞—Ä"
]))
async def trig_formulas(message: types.Message):
    user_id = message.from_user.id
    lang = user_states.get(user_id, {}).get("lang", "ru")
    menu = trig_formulas_menu_ru if lang == "ru" else trig_formulas_menu_kz
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ñ–æ—Ä–º—É–ª:", reply_markup=menu)

# --- –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—É–ª –ø–æ –∫–Ω–æ–ø–∫–µ ---
@dp.message(F.text.in_(formula_images.keys()))
async def send_formula(message: types.Message):
    formula = message.text
    file_id = formula_images.get(formula)
    await message.answer_photo(file_id, caption=f"<b>{formula}</b>")

@dp.message(F.text == "üìä –¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è —Ç–∞–±–ª–∏—Ü–∞")
async def trig_table_ru(message: types.Message):
    file_id = formula_images.get("üìä –¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è —Ç–∞–±–ª–∏—Ü–∞")
    if file_id:
        await message.answer_photo(file_id, caption="–¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è —Ç–∞–±–ª–∏—Ü–∞ üìä")
    else:
        await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, —Ç–∞–±–ª–∏—Ü–∞ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.")

@dp.message(F.text == "üìä –¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—è–ª—ã“õ –∫–µ—Å—Ç–µ")
async def trig_table_kz(message: types.Message):
    file_id = formula_images.get("üìä –¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—è–ª—ã“õ –∫–µ—Å—Ç–µ")
    if file_id:
        await message.answer_photo(file_id, caption="–¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—è–ª—ã“õ –∫–µ—Å—Ç–µ üìä")
    else:
        await message.answer("–ö–µ—Å—Ç–µ —Ç–∞–±—ã–ª–º–∞–¥—ã.")

# --- –ù–∞–∑–∞–¥ ---
@dp.message(F.text.in_(["üîô –ù–∞–∑–∞–¥", "üîô “ö–∞–π—Ç—É"]))
async def go_back(message: types.Message):
    user_id = message.from_user.id
    state = user_states.get(user_id)
    if not state:
        await message.answer("–í—ã —É–∂–µ –≤ –Ω–∞—á–∞–ª–µ.", reply_markup=language_menu)
        return
    if not state["history"]:
        await message.answer("–í—ã —É–∂–µ –≤ –Ω–∞—á–∞–ª–µ.", reply_markup=language_menu)
        return

    last = state["history"].pop()
    if last == "mode_selected":
        lang = state["lang"]
        await message.answer(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:" if lang == "ru" else "–ñ“±–º—ã—Å —Ä–µ–∂–∏–º—ñ–Ω —Ç–∞“£–¥–∞“£—ã–∑:",
            reply_markup=mode_menu_ru if lang == "ru" else mode_menu_kz
        )
    elif last == "lang_selected":
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / –¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑:", reply_markup=language_menu)

# --- –ó–∞–ø—É—Å–∫ ---
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
